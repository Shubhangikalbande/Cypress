const preloadedClickIndicator = []

/**
 * Tracks the time when called and registers the time when the video should start.
 * Used for trimming the output video.
 */
function startVideo() {
    if (Cypress.env("CY_VIDEO_MODE") != true) {
        return
    }

    Cypress.log()

    cy.task("getVideoTime", {time: Date.now()}, {log: false})

    // The click indicator uses an image online 
    // (can't use files from the plugin folder, since cypress yoinks the code and puts it somewhere else :slowpensive),
    // so we preload the image here, so that it doesn't have to load on the first call of clickIndicator.
    // If it had to load it for the first time there, it would take about as long to appear as the appearing animation, so it looks bad.
    // We could also wait in clickIndicator itself, but that would take >200ms, which is too long to be honest.
    const doc = cy.state('document')
    const img = doc.createElement('img')
    img.src = "https://i.imgur.com/uszfpHq.png"
    preloadedClickIndicator.push(img)   // Put reference into 'global' array so that browser doesn't clear it from cache.
}

/**
 * Tracks the time when called and registers the time as the end spec time. 
 * Used for trimming the output video. Should be called at the very end of a spec file in an 'after(() => { .. })' context.
 */
function endVideo() {
    if (Cypress.env("CY_VIDEO_MODE") != true) {
        return
    }

    Cypress.log()   

    cy.task("getEndSpecTime", {time: Date.now()}, {log: false})
}

Cypress.Commands.add('startVideo', {prevSubject: false}, startVideo)
Cypress.Commands.add('endVideo', {prevSubject: false}, endVideo)